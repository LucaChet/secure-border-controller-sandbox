<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<ITResourceOrchestration xmlns="http://modeliosoft/xsddesigner/a22bd60b-ee3d-425c-8618-beb6a854051a/ITResource.xsd"
                         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                         xsi:schemaLocation="http://modeliosoft/xsddesigner/a22bd60b-ee3d-425c-8618-beb6a854051a/ITResource.xsd ../xsd/mspl.xsd"
                         id="example-mspl">

    <!-- ✅ Request Intent -->
    <ITResource>
        <configuration xsi:type="RequestIntents">
            <capability>
                <Name>KubernetesNetworkFiltering</Name>
            </capability>
            <acceptMonitoring>true</acceptMonitoring>

            <configurationRule>
                <Name>RequestIntent_Example</Name>
                <configurationRuleAction xsi:type="KubernetesNetworkFilteringAction">
                    <KubernetesNetworkFilteringActionType>ALLOW</KubernetesNetworkFilteringActionType>
                </configurationRuleAction>
                <configurationCondition xsi:type="KubernetesNetworkFilteringCondition">
                    <isCNF>false</isCNF>
                    <source xsi:type="PodNamespaceSelector">
                        <isHostCluster>false</isHostCluster>
                        <pod>
                            <key>app</key>
                            <value>client</value>
                        </pod>
                        <namespace>
                            <key>name</key>
                            <value>fluidos</value>
                        </namespace>
                    </source>
                    <destination xsi:type="CIDRSelector">
                        <isHostCluster>true</isHostCluster>
                        <addressRange>0.0.0.0/0</addressRange>
                    </destination>
                    <sourcePort>*</sourcePort>
                    <destinationPort>443</destinationPort>
                    <protocolType>TCP</protocolType>
                </configurationCondition>
                <externalData xsi:type="Priority">
                    <value>10000</value>
                </externalData>
                <isCNF>false</isCNF>
            </configurationRule>
        </configuration>
    </ITResource>

    <!-- 🔒 Private Intent -->
    <ITResource>
        <configuration xsi:type="PrivateIntents">
            <capability>
                <Name>KubernetesNetworkFiltering</Name>
            </capability>

            <configurationRule>
                <Name>PrivateIntent_Example</Name>
                <configurationRuleAction xsi:type="KubernetesNetworkFilteringAction">
                    <KubernetesNetworkFilteringActionType>DENY</KubernetesNetworkFilteringActionType>
                </configurationRuleAction>
                <configurationCondition xsi:type="KubernetesNetworkFilteringCondition">
                    <isCNF>false</isCNF>
                    <source xsi:type="PodNamespaceSelector">
                        <isHostCluster>false</isHostCluster>
                        <pod>
                            <key>app</key>
                            <value>internal-db</value>
                        </pod>
                        <namespace>
                            <key>name</key>
                            <value>monitoring</value>
                        </namespace>
                    </source>
                    <destination xsi:type="CIDRSelector">
                        <isHostCluster>false</isHostCluster>
                        <addressRange>10.0.0.0/8</addressRange>
                    </destination>
                    <sourcePort>*</sourcePort>
                    <destinationPort>*</destinationPort>
                    <protocolType>ALL</protocolType>
                </configurationCondition>
                <isCNF>false</isCNF>
            </configurationRule>
        </configuration>
    </ITResource>

    <!-- Authorization Intents ❌ Forbidden Communications and ✅ Mandatory Communications-->
    <ITResource>
        <configuration xsi:type="AuthorizationIntents">
            <capability>
                <Name>KubernetesNetworkFiltering</Name>
            </capability>
            <forbiddenConnectionList>
                <configurationRuleAction xsi:type="KubernetesNetworkFilteringAction">
                    <KubernetesNetworkFilteringActionType>DENY</KubernetesNetworkFilteringActionType>
                </configurationRuleAction>
                <configurationCondition xsi:type="KubernetesNetworkFilteringCondition">
                    <isCNF>false</isCNF>
                    <source xsi:type="PodNamespaceSelector">
                        <isHostCluster>true</isHostCluster>
                        <pod>
                            <key>*</key>
                            <value>*</value>
                        </pod>
                        <namespace>
                            <key>*</key>
                            <value>*</value>
                        </namespace>
                    </source>
                    <sourcePort>*</sourcePort>
                    <destination xsi:type="PodNamespaceSelector">
                        <isHostCluster>false</isHostCluster>
                        <pod>
                            <key>*</key>
                            <value>*</value>
                        </pod>
                        <namespace>
                            <key>name</key>
                            <value>handle-payments</value>
                        </namespace>
                    </destination>
                    <destinationPort>0-79</destinationPort>
                    <protocolType>TCP</protocolType>
                </configurationCondition>
                <externalData xsi:type="Priority">
                    <value>60000</value>
                </externalData>
                <Name>AuthorizationDeny_3</Name>
                <isCNF>false</isCNF>
            </forbiddenConnectionList>
            <mandatoryConnectionList>
                <configurationRuleAction xsi:type="KubernetesNetworkFilteringAction">
                    <KubernetesNetworkFilteringActionType>ALLOW</KubernetesNetworkFilteringActionType>
                </configurationRuleAction>
                <configurationCondition xsi:type="KubernetesNetworkFilteringCondition">
                    <isCNF>false</isCNF>
                    <source xsi:type="PodNamespaceSelector">
                        <isHostCluster>false</isHostCluster>
                        <pod>
                            <key>app</key>
                            <value>resource-monitor</value>
                        </pod>
                        <namespace>
                            <key>name</key>
                            <value>monitoring</value>
                        </namespace>
                    </source>
                    <sourcePort>*</sourcePort>
                    <destination xsi:type="PodNamespaceSelector">
                        <isHostCluster>true</isHostCluster>
                        <pod>
                            <key>*</key>
                            <value>*</value>
                        </pod>
                        <namespace>
                            <key>*</key>
                            <value>*</value>
                        </namespace>
                    </destination>
                    <destinationPort>43</destinationPort>
                    <protocolType>TCP</protocolType>
                </configurationCondition>
                <Name>AuthorizationMandatory_1</Name>
                <isCNF>false</isCNF>
            </mandatoryConnectionList>
        </configuration>
    </ITResource>
</ITResourceOrchestration>

